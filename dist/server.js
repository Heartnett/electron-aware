var fs=require("fs"),ref=require("child_process"),exec=ref.exec,SocketIO=require("socket.io"),electronPath=require.resolve(".bin/electron"),logger=require("./logger"),Emitter=require("./emitter");if(!fs.existsSync(electronPath))throw new Error("Unable to find Electron in '"+electronPath+"'");var startElectron=function(e){logger("running "+e),exec(electronPath+" "+e,function(e){e&&logger(e,!0)})},Server=function(e){function o(){e.call(this),this.io=null}return e&&(o.__proto__=e),o.prototype=Object.create(e&&e.prototype),o.prototype.constructor=o,o.prototype.allowLogging=function(e){logger.enabled=e},o.prototype.onError=function(e){this.on("error",e)},o.prototype.close=function(){logger("closing electron..."),this._ioEmit("close-app")},o.prototype.send=function(e,o,t){void 0===t&&(t=!1),t&&logger("calling "+e+"..."),this._ioEmit(e,o)},o.prototype.refresh=function(){logger("refreshing page..."),this._ioEmit("refresh-page")},o.prototype.reload=function(){logger("reloading electron..."),this._ioEmit("reload-app")},o.prototype._initializeConnection=function(e,o){var t=this;o.on("restart-app",function(o){t._run(function(){o(),startElectron(e),logger("electron reloaded"),t.emit("electron-reloaded")})}),o.on("page-refreshed",function(){t._run(function(){logger("page refreshed"),t.emit("page-refreshed")})}),o.on("online",function(){t._run(function(){logger("electron started"),t.emit("electron-started")})}),o.on("offline",function(){t._run(function(){logger("electron closed"),t.emit("electron-closed"),t.io.close()})}),o.on("message",function(e){var o=e.event,r=e.args;t._run(function(){logger(o),t.emit(o,r)})})},o.prototype._run=function(e){try{e&&e.call(this)}catch(e){this.emit("error",e)}},o.prototype._ioEmit=function(e,o){this.io.emit("message",{event:e,args:o})},o.prototype.start=function(e){void 0===e&&(e=".");var o=this;o.io=SocketIO(),o.io.on("connection",function(t){o._run(function(){o._initializeConnection(e,t)})}),o.io.listen(8087),startElectron(e)},o}(Emitter);module.exports=new Server;