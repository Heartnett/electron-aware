var fs=require("fs"),electron_path=require("path").resolve(__dirname,"../../.bin/electron");if(!fs.existsSync(electron_path))throw"Unable to find Electron in '"+electron_path+"'";var ref=require("events"),EventEmitter=ref.EventEmitter,Ultron=require("ultron"),WebSocket=require("ws"),ref$1=require("child_process"),exec=ref$1.exec,events=new EventEmitter,ultron=new Ultron(events),Server=function(){this.wss=null};Server.prototype.isStarted=function(){var e=!0;return null===this.wss&&(this.log("Call the start method first!",!0),e=!1),e},Server.prototype.log=function(e,t){console.log("[electron-aware] - "+(t?"(ERROR) ":"")+e)},Server.prototype.on=function(e,t){"object"==typeof e&&void 0===t?Object.keys(e).forEach(function(t){ultron.on(t,e[t])}):"string"==typeof e&&"function"==typeof t&&ultron.on(e,t)},Server.prototype.send=function(e){this.isStarted()&&this.wss.clients.forEach(function(t){return t.send(e)})},Server.prototype.start=function(){var e=this;e.wss=new WebSocket.Server({port:8087},e.startElectron),e.wss.on("connection",function(t){t.on("message",function(t){switch(t){case"restart-app":return void e.startElectron();case"online":e.log("electron started..."),events.emit("electron-started");break;case"offline":e.log("electron closed..."),events.emit("electron-closed")}})})},Server.prototype.startElectron=function(){var e=this;exec(electron_path+" .",function(t){if(t)return void e.log(t,!0)})},module.exports=Server;